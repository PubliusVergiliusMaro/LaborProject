<UserControl x:Class="LaborProjectOOP.Dekstop.Views.Pages.EditBooksView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LaborProjectOOP.Dekstop.Views.Pages"
             mc:Ignorable="d" 
            d:DesignHeight="800" d:DesignWidth="1250">
    <UserControl.Resources>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="ItemsControl.Background" Value="Black"/>
            <Setter Property="ItemsControl.Foreground" Value="White"/>
            <Setter Property="ItemsControl.FontSize" Value="13"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DataGrid 
            x:Name="booksListDataGrid"
            IsReadOnly="True" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            AutoGenerateColumns="False"
            ItemsSource="{Binding EditBooksViewModel.Books, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding EditBooksViewModel.SelectedBook,UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>
                <DataGridTextColumn Width="100" Header="Title" Binding="{Binding Title}"></DataGridTextColumn>
                <DataGridTextColumn Width="100" Header="Price" Binding="{Binding Price}"></DataGridTextColumn>
                <DataGridTextColumn Width="100" Header="Author Name" Binding="{Binding Author.Name}"></DataGridTextColumn>
                <DataGridTextColumn Width="100" Header="Author Surname" Binding="{Binding Author.Surname}" ></DataGridTextColumn>
                <DataGridTextColumn Width="100" Header="Catalog Name" Binding="{Binding Catalog.Name}" ></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>
            <Button x:Name="refreshBooksDataGrid" Width="50" HorizontalAlignment="Left" Margin="5 0 0 0" Height="50" Command="{Binding EditBooksViewModel.RefreshBooksCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="White" Stroke="Black" StrokeThickness="2"/>
                            <Image Height="30" Source="/Images/PagesIcons/RefreshIcon.png"></Image>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <StackPanel Orientation="Vertical" Margin="0,0,0,0" Grid.Row="1">
                <Label HorizontalContentAlignment="Center">Sorting Types</Label>
                <ComboBox ItemsSource="{Binding EditBooksViewModel.SortingTypes,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding EditBooksViewModel.SelectedSortType,UpdateSourceTrigger=PropertyChanged}" x:Name="sortingBooksComboBox" Width="100" Height="30" Text="Sort Table"/>

            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="2">
                <Label HorizontalAlignment="Center">Choose Catalog</Label>
                <ComboBox x:Name="catalogsComboBox" ItemsSource="{Binding EditBooksViewModel.Catalogs,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding EditBooksViewModel.SelectedCatalog,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath = "Name" Width="250" Height="30"></ComboBox>
                <Button Style="{StaticResource ButtonStyle}" x:Name="addBookToCatalog" Width="250" Height="35" Margin="0 20 0 0" Command="{Binding EditBooksViewModel.AddBookToCatalogCommand}">
                    Add selected Book to the selected Catalog
                </Button>
                <Button Style="{StaticResource ButtonStyle}" FontSize="20" Margin="0 20 0 0" Width="250" Height="30" Command="{Binding EditBooksViewModel.DeleteSelectedBookCommand}">Delete Selected Book</Button>
            </StackPanel>

        </Grid>
    </Grid>
</UserControl>
